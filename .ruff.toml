# Ruff configuration for agent-orchestrated-etl
# See: https://docs.astral.sh/ruff/

# Enable pyproject.toml discovery.
extend = "pyproject.toml"

# Target Python 3.8+ compatibility
target-version = "py38"

# Configure line length
line-length = 88

# Enable specific rule categories
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # Pyflakes
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
    "I",    # isort
    "N",    # pep8-naming
    "D",    # pydocstyle
    "S",    # flake8-bandit (security)
    "BLE",  # flake8-blind-except
    "FBT",  # flake8-boolean-trap
    "A",    # flake8-builtins
    "COM",  # flake8-commas
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "T10",  # flake8-debugger
    "EM",   # flake8-errmsg
    "EXE",  # flake8-executable
    "FA",   # flake8-future-annotations
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "G",    # flake8-logging-format
    "INP",  # flake8-no-pep420
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "PYI",  # flake8-pyi
    "PT",   # flake8-pytest-style
    "Q",    # flake8-quotes
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SLF",  # flake8-self
    "SLOT", # flake8-slots
    "TID",  # flake8-tidy-imports
    "TCH",  # flake8-type-checking
    "INT",  # flake8-gettext
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "PGH",  # pygrep-hooks
    "PL",   # Pylint
    "TRY",  # tryceratops
    "FLY",  # flynt
    "PERF", # Perflint
    "RUF",  # Ruff-specific rules
]

# Disable specific rules that may be too strict
ignore = [
    "D100",   # Missing docstring in public module
    "D101",   # Missing docstring in public class  
    "D102",   # Missing docstring in public method
    "D103",   # Missing docstring in public function
    "D104",   # Missing docstring in public package
    "D105",   # Missing docstring in magic method
    "D107",   # Missing docstring in __init__
    "D203",   # 1 blank line required before class docstring
    "D213",   # Multi-line docstring summary should start at the second line
    "E501",   # Line too long (handled by formatter)
    "S101",   # Use of assert detected (common in tests)
    "PLR0913", # Too many arguments to function call
    "PLR0915", # Too many statements
    "B008",   # Do not perform function calls in argument defaults
    "FBT001", # Boolean positional arg in function definition
    "FBT002", # Boolean default positional argument in function definition
    "ARG001", # Unused function argument
    "ARG002", # Unused method argument
]

# Allow fix for all enabled rules.
fixable = ["ALL"]

# Avoid trying to fix these violations.
unfixable = [
    "F401",   # Don't remove unused imports automatically
    "F841",   # Don't remove unused variables automatically
]

# Exclude common paths
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "docs/",
]

# Group violations by containing file.
show-fixes = true
show-source = true

[format]
# Use double quotes for strings.
quote-style = "double"

# Indent with spaces, rather than tabs.
indent-style = "space"

# Respect magic trailing commas.
skip-magic-trailing-comma = false

# Automatically detect the appropriate line ending.
line-ending = "auto"

[lint.isort]
known-first-party = ["agent_orchestrated_etl"]
force-single-line = false
lines-after-imports = 2

[lint.pydocstyle]
convention = "google"

[lint.per-file-ignores]
# Tests can use more relaxed rules
"tests/**/*.py" = [
    "S101",    # Use of assert
    "PLR2004", # Magic value used in comparison
    "D100",    # Missing docstring in public module
    "D103",    # Missing docstring in public function
]

# CLI scripts can have looser rules
"**/cli.py" = [
    "T201",    # print() is allowed in CLI
]

# Configuration files
"**/config*.py" = [
    "S105",    # Possible hardcoded password (handled by secrets manager)
]