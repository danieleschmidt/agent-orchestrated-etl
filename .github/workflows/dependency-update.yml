# Automated Dependency Updates
# =============================================================================
# This workflow automatically updates dependencies and creates PRs
# Note: This file is created as a template. User needs to review and implement.

name: Dependency Updates

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of update to perform'
        required: true
        default: 'minor'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  # ===========================================================================
  # Python Dependencies Update
  # ===========================================================================
  
  update-python-deps:
    name: Update Python Dependencies
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install pip-tools
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools pip-audit

    - name: Generate requirements files
      run: |
        pip-compile pyproject.toml --output-file requirements.txt
        pip-compile pyproject.toml --extra dev --output-file requirements-dev.txt

    - name: Update dependencies
      run: |
        pip-compile --upgrade pyproject.toml --output-file requirements.txt
        pip-compile --upgrade pyproject.toml --extra dev --output-file requirements-dev.txt

    - name: Audit dependencies for vulnerabilities
      run: |
        pip-audit --requirement requirements.txt --format=json --output=audit-report.json
        pip-audit --requirement requirements.txt

    - name: Check for dependency conflicts
      run: |
        pip install -r requirements-dev.txt
        pip check

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update Python dependencies'
        title: '🔄 Weekly Python dependency updates'
        body: |
          ## Automated Dependency Updates
          
          This PR contains automated updates to Python dependencies.
          
          ### Changes
          - Updated Python dependencies to latest compatible versions
          - Ran security audit on all dependencies
          - Verified no dependency conflicts exist
          
          ### Security Audit
          See the attached audit report for any security findings.
          
          ### Testing
          - [ ] All tests pass
          - [ ] Security audit clean
          - [ ] No breaking changes detected
          
          This PR was created automatically by the dependency update workflow.
        branch: chore/update-python-deps
        delete-branch: true
        labels: |
          dependencies
          automated
          python

  # ===========================================================================
  # GitHub Actions Updates
  # ===========================================================================
  
  update-actions:
    name: Update GitHub Actions
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Update GitHub Actions
      uses: adlternative/update-github-actions@main
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update GitHub Actions'
        title: '🔄 Update GitHub Actions to latest versions'
        body: |
          ## Automated GitHub Actions Updates
          
          This PR updates GitHub Actions to their latest versions.
          
          ### Changes
          - Updated all GitHub Actions to latest stable versions
          - Maintained compatibility with existing workflows
          
          ### Verification
          - [ ] All workflows validate successfully
          - [ ] No breaking changes in action APIs
          
          This PR was created automatically by the dependency update workflow.
        branch: chore/update-github-actions
        delete-branch: true
        labels: |
          dependencies
          automated
          github-actions

  # ===========================================================================
  # Docker Base Image Updates
  # ===========================================================================
  
  update-docker-images:
    name: Update Docker Images
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Check for base image updates
      id: docker-updates
      run: |
        # Check Python base image
        CURRENT_PYTHON=$(grep -oP '(?<=FROM python:)\S+' Dockerfile | head -1)
        LATEST_PYTHON=$(curl -s "https://registry.hub.docker.com/v2/repositories/library/python/tags/" | jq -r '.results[] | select(.name | test("^3\\.11-slim$")) | .name' | head -1)
        
        if [ "$CURRENT_PYTHON" != "3.11-slim" ]; then
          echo "python_update=true" >> $GITHUB_OUTPUT
          echo "current_python=$CURRENT_PYTHON" >> $GITHUB_OUTPUT
          echo "latest_python=3.11-slim" >> $GITHUB_OUTPUT
        fi

    - name: Update Dockerfile
      if: steps.docker-updates.outputs.python_update == 'true'
      run: |
        sed -i 's/FROM python:.*/FROM python:3.11-slim/g' Dockerfile

    - name: Update docker-compose.yml
      if: steps.docker-updates.outputs.python_update == 'true'
      run: |
        # Update any hardcoded versions in docker-compose.yml
        echo "Checking docker-compose.yml for updates..."

    - name: Test Docker build
      if: steps.docker-updates.outputs.python_update == 'true'
      run: |
        docker build -t test-build .

    - name: Create Pull Request
      if: steps.docker-updates.outputs.python_update == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update Docker base images'
        title: '🐳 Update Docker base images'
        body: |
          ## Automated Docker Image Updates
          
          This PR updates Docker base images to latest stable versions.
          
          ### Changes
          - Updated Python base image from `${{ steps.docker-updates.outputs.current_python }}` to `${{ steps.docker-updates.outputs.latest_python }}`
          
          ### Verification
          - [x] Docker build test passed
          - [ ] Security scan on new image
          - [ ] All tests pass with new base image
          
          This PR was created automatically by the dependency update workflow.
        branch: chore/update-docker-images
        delete-branch: true
        labels: |
          dependencies
          automated
          docker

  # ===========================================================================
  # Pre-commit Hooks Update
  # ===========================================================================
  
  update-pre-commit:
    name: Update Pre-commit Hooks
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install pre-commit
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit

    - name: Update pre-commit hooks
      run: |
        pre-commit autoupdate

    - name: Test pre-commit hooks
      run: |
        pre-commit run --all-files

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update pre-commit hooks'
        title: '🪝 Update pre-commit hooks'
        body: |
          ## Automated Pre-commit Hook Updates
          
          This PR updates pre-commit hooks to their latest versions.
          
          ### Changes
          - Updated all pre-commit hooks to latest available versions
          - Verified all hooks run successfully
          
          ### Verification
          - [x] All hooks run without errors
          - [ ] Code quality checks pass
          
          This PR was created automatically by the dependency update workflow.
        branch: chore/update-pre-commit
        delete-branch: true
        labels: |
          dependencies
          automated
          pre-commit

  # ===========================================================================
  # Security Advisory Check
  # ===========================================================================
  
  security-advisory-check:
    name: Check Security Advisories
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety pip-audit

    - name: Check for security advisories
      id: security-check
      run: |
        # Run safety check
        safety check --json --output safety-results.json || true
        
        # Run pip-audit
        pip-audit --format=json --output=audit-results.json || true
        
        # Check if any vulnerabilities found
        if [ -s safety-results.json ] || [ -s audit-results.json ]; then
          echo "vulnerabilities_found=true" >> $GITHUB_OUTPUT
        fi

    - name: Create security issue
      if: steps.security-check.outputs.vulnerabilities_found == 'true'
      uses: actions/github-script@v6
      with:
        script: |
          const title = '🚨 Security vulnerabilities detected in dependencies';
          const body = `
          ## Security Alert
          
          Automated dependency scanning has detected security vulnerabilities.
          
          ### Action Required
          - Review the attached security reports
          - Update affected dependencies
          - Test the application after updates
          
          ### Reports
          - Safety scan results attached
          - Pip-audit results attached
          
          This issue was created automatically by the security monitoring workflow.
          `;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['security', 'high-priority', 'automated']
          });

    - name: Upload security reports
      if: steps.security-check.outputs.vulnerabilities_found == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          safety-results.json
          audit-results.json