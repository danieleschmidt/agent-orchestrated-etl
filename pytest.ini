[tool:pytest]
# Configuration for pytest

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output configuration
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --color=yes
    --durations=10
    --cov=src/agent_orchestrated_etl
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80

# Test markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    performance: marks tests as performance tests
    security: marks tests as security tests
    api: marks tests as API tests
    database: marks tests requiring database
    aws: marks tests requiring AWS services
    mock: marks tests using mocks
    e2e: marks tests as end-to-end tests
    contract: marks tests as contract tests
    regression: marks tests as regression tests
    smoke: marks tests as smoke tests
    external: marks tests requiring external services
    real: marks tests using real services

# Minimum version
minversion = 6.0

# Test session timeout (in seconds)
timeout = 300

# Asyncio configuration
asyncio_mode = auto

# Ignore specific warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning:langchain.*
    ignore::PendingDeprecationWarning

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Parallel execution (if pytest-xdist is installed)
# addopts = -n auto